April 22, 2001:
  Big changes today.  Here's the scoop:
  
  Added MAP_Client.cpp/.h.  This is a minimalist-implementation of mapBase
  functionality, without dependencies on the entBase and objBase classes
  (which the client isn't going to need).  Instead, it stores known map data
  and an entity type and an object type for each square.  (It needs to be able
  to store an object array for each square.. but we'll work on that later)

  Here's the biggie, though..  I've moved about half of the movement code
  into the entBase and entPlayer classes.  Once turns are properly synched
  between nearby players, I'll be able to remove the rest of the movement
  code, because it'll no longer be required.  (The movement code still in
  hnGame is there to synchronise the movements of moving players with the
  vision of non-moving players, if that makes any sense).

  Moved enumerations from OBJ/ENT_Base.h into OBJ/ENT_Types.h  This is so
  that the client code can get the types without including the object and
  entity class declarations (which it doesn't need).

  Fixed Makefile.am to remove some unneeded source files from the client.  My
  mistake.  :)   (They'd just be removed in the linking process, but now
  'make hacknet' doesn't have to compile quite so many source files)

  Removed 'playerData' structure from hnGame class.  It just stores pointers
  to entPlayer classes now -- the entPlayers keep track of their own extra
  data.  Hooray for object-oriented code!

---
April 21, 2001:
  Lots of renamed files, to make a more consistant file naming scheme.  Objects now
  have an OBJ prefix, Entities (players, monsters, etc) now have an ENT prefix, and
  Maps now have a MAP prefix.  Core classes still use HN, and network classes still
  use NET.

  Adjusted the hnGame and netServer classes.  The netServer has a pointer to the
  hnGame, which has a pointer to the lower-level guts of the simulation.  Both
  the netServer and the hnGame are singletons (possibly the hnGame shouldn't be
  a singleton -- to be considered for future updates).  This is in preparation
  for migrating the player update logic from the hnGame object into the entPlayer
  object.

  Added hnDungeon class (singleton) to own all the levels in the dungeon.  Again,
  trying to move as much out of the hnGame as possible, in preparation for moving
  the movement code into the entPlayer.
---
April 1, 2001:
  Continued discussions about timing issues.
  Adjusted object class hierarchy -- 'hnEntity' is now at the top of the hierarchy,
  with 'hnObject' and 'hnCreature' derived from it.  Players and monsters will be
  derived from hnCreature, while inanimate objects will be derived from hnObject.
---
March 11, 2001:
  Development kicks into gear and first code entered into SourceForge CVS repository
---
Dec 8, 2000:
  First code entered into CVS repository
---
